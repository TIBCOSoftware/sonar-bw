name: CI Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'


jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    env:
      MAVEN_CLI_OPTS: "-s ci_settings.xml"
      MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_PAT: ${{ secrets.GH_PAT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Cache Maven local repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Determine Version
        id: version
        run: |
          if [ "${GITHUB_REF_NAME}" == "main" ]; then
            echo "VERSION_SUFFIX=" >> $GITHUB_ENV
          else
            echo "VERSION_SUFFIX=-SNAPSHOT" >> $GITHUB_ENV
          fi

      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS -Dproject.versionSuffix=${{ env.VERSION_SUFFIX }} clean initialize package
        env:
          MAVEN_OPTS: ${{ secrets.MAVEN_OPTS }}

      - name: Vulnerability Check
        id: check
        run: |
          if [ "${GITHUB_REF_NAME}" == "main" || "${GITHUB_REF_NAME}" == "develop" ]; then
            mvn $MAVEN_CLI_OPTS -Dproject.versionSuffix=${{ env.VERSION_SUFFIX }} org.owasp:dependency-check-maven
          fi
        env:
          MAVEN_OPTS: ${{ secrets.MAVEN_OPTS }}

      - name: Deploy with maven with Maven
        run: mvn $MAVEN_CLI_OPTS -Dproject.versionSuffix=${{ env.VERSION_SUFFIX }} deploy
        env:
          MAVEN_OPTS: ${{ secrets.MAVEN_OPTS }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sonar-bw
          path: ./target

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      MAVEN_CLI_OPTS: "-s ci_settings.xml"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven local repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Run tests with JaCoCo
        run: mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/jacoco.xml

  visualize:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Convert JaCoCo to Cobertura
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            registry.gitlab.com/haynes/jacoco2cobertura:1.0.9 \
            python /opt/cover2cover.py /workspace/target/site/jacoco/jacoco.xml /workspace/src/main/java/ > ${{ github.workspace }}/target/site/cobertura.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: cobertura-report
          path: ${{ github.workspace }}/target/site/cobertura.xml
